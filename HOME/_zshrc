# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

NPM_PACKAGES="${HOME}/.npm-packages"
export PATH="$HOME/.yarn-global/bin:$NPM_PACKAGES/bin:$PATH"

#DIRENV
eval "$(direnv hook zsh)"


# Node version manager
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export PROJECT_HOME=$HOME/Projects
export CDPATH=.:$HOME/Projects:


# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME="agnoster"
ZSH_THEME="my"

#source ~/.virtualenv-auto-activate.sh

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(git vi-mode common-aliases virtualenvwrapper web-search)
plugins=(git vi-mode common-aliases web-search)
export EDITOR="vim";
export MANPAGER="sh -c 'col -b | bat -l man -p'"
KEYTIMEOUT=1
alias vim=vim
alias tmux="TERM=xterm-256color tmux"
#Force tmux to assume the terminal supports 256 colours
#export TERM="xterm-256color"
if [ "$TMUX" = "" ]; then tmux -2; fi

BASE16_SHELL=$HOME/.config/base16-shell/
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

# Ctrl-S freeze disable
stty -ixon

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias da=django-admin

dao () {
  docker-compose exec django bash -c "pipenv run django-admin $@"
}

# TODO move aliases to .zshenv
alias dl="direnv allow"
alias ys="yarn start"
alias dr="django-admin runserver"

alias dap="django-admin shell_plus"
alias dapp="django-admin shell_plus --print-sql"
alias daf="django-admin set_fake_passwords --password 123"
alias das="django-admin makemigrations --dry-run -v 3"
alias dar="django-admin runserver"
alias daro="django-admin runserver 0.0.0.0:8000"
alias dar1="django-admin runserver localhost:8001"
alias dar2="django-admin runserver localhost:8002"
alias dar3="django-admin runserver localhost:8003"
alias dar4="django-admin runserver localhost:8004"
alias dar5="django-admin runserver localhost:8005"
alias dar6="django-admin runserver localhost:8006"
alias dar7="django-admin runserver localhost:8007"
alias dar8="django-admin runserver localhost:8008"
alias dar9="django-admin runserver localhost:8009"

alias dop="docker-compose exec django bash -c \"pipenv run django-admin shell_plus\""
alias dor="docker-compose exec django bash -c \"pipenv run django-admin runserver\""
alias do1="docker-compose exec django bash -c \"pipenv run django-admin runserver localhost:8001\""
alias do2="docker-compose exec django bash -c \"pipenv run django-admin runserver localhost:8002\""
alias do3="docker-compose exec django bash -c \"pipenv run django-admin runserver localhost:8003\""
alias do4="docker-compose exec django bash -c \"pipenv run django-admin runserver localhost:8004\""
alias do5="docker-compose exec django bash -c \"pipenv run django-admin runserver localhost:8005\""
alias do6="docker-compose exec django bash -c \"pipenv run django-admin runserver localhost:8006\""
alias do7="docker-compose exec django bash -c \"pipenv run django-admin runserver localhost:8007\""
alias do8="docker-compose exec django bash -c \"pipenv run django-admin runserver localhost:8008\""
alias do9="docker-compose exec django bash -c \"pipenv run django-admin runserver localhost:8009\""


alias gitdiff="git diff HEAD"
alias gitcommit="git add -u; git commit"

alias nvim="/opt/homebrew/bin/nvim -u ~/.nvim_config.lua"



#[[ -s "/etc/bash_completion.d/virtualenvwrapper" ]] && source "/etc/bash_completion.d/virtualenvwrapper"

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('H0Me/opt/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "H0Me/opt/anaconda3/etc/profile.d/conda.sh" ]; then
#         . "H0Me/opt/anaconda3/etc/profile.d/conda.sh"
#     else
#         export PATH="H0Me/opt/anaconda3/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# <<< conda initialize <<<

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"


export PATH=$HOME/development/flutter/bin:$PATH
